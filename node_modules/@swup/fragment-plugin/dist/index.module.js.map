{"version":3,"file":"index.module.js","sources":["../src/inc/env.ts","../src/inc/Logger.ts","../src/inc/functions.ts","../src/inc/ParsedRule.ts","../src/inc/handlers.ts","../src/SwupFragmentPlugin.ts"],"sourcesContent":["declare global {\n\tconst __DEV__: boolean;\n\tconst MICROBUNDLE_TARGET: string;\n\tinterface Window {\n\t\tprocess?: any;\n\t}\n}\n\n/**\n * Make sure process.env is defined in the browser\n */\nif (!window.process) window.process = {};\nif (!window.process.env) window.process.env = {};\n\n/**\n * Export the __DEV__ variable. This will become false in production builds from consumers\n */\nexport const __TEST__ = ['test'].includes(String(process.env.NODE_ENV));\nexport const __DEV__ = ['development', 'test'].includes(String(process.env.NODE_ENV));\n","import { __TEST__ } from './env.js';\n/**\n * Wrap a string in an escape sequence\n * @see https://stackoverflow.com/a/68373080/586823\n */\nconst wrapInEscapeSequence = (s: string, open: number, close: number): string => {\n\tif (s == null) return s;\n\treturn `\\x1b[${open}m${String(s)}\\x1b[${close}m`;\n};\n\n/**\n * Color Codes:\n * @see https://github.com/lzwme/console-log-colors/blob/56a41b352bf9ed327cc864f588b831d92ee6390e/src/index.js\n */\nconst bold = (s: string): string => wrapInEscapeSequence(s, 1, 22);\nconst purple = (s: string): string => wrapInEscapeSequence(s, 94, 39);\n\nconst prepare = (s: string): string => {\n\tif (__TEST__) return s;\n\treturn `ðŸ§© ${bold(s)}`;\n};\n\nexport const highlight = (s: string): string => {\n\tif (__TEST__) return s;\n\treturn purple(s);\n};\n\n/**\n * A slim wrapper around console statements\n */\nexport default class Logger {\n\tlog(...args: any) {\n\t\tconst msg = args.shift();\n\t\tconsole.log(prepare(msg), ...args);\n\t}\n\twarn(...args: any) {\n\t\tconst msg = args.shift();\n\t\tconsole.warn(prepare(msg), ...args);\n\t}\n\terror(...args: any) {\n\t\tconst msg = args.shift();\n\t\tconsole.error(prepare(msg), ...args);\n\t}\n\tlogIf(condition: boolean, ...args: any) {\n\t\tif (condition) this.log(...args);\n\t}\n\twarnIf(condition: boolean, ...args: any) {\n\t\tif (condition) this.warn(...args);\n\t}\n\terrorIf(condition: boolean, ...args: any) {\n\t\tif (condition) this.error(...args);\n\t}\n}\n","import Swup, { Location } from 'swup';\nimport type { Visit, VisitScroll } from 'swup';\nimport type { default as FragmentPlugin } from '../SwupFragmentPlugin.js';\nimport type { Route, Rule, FragmentVisit, FragmentElement } from './defs.js';\nimport type ParsedRule from './ParsedRule.js';\nimport Logger, { highlight } from './Logger.js';\n\nimport { __DEV__ } from './env.js';\n\n/**\n * Handles a page view. Runs on `mount` as well as on every content:replace\n */\nexport const handlePageView = (fragmentPlugin: FragmentPlugin): void => {\n\tprepareFragmentElements(fragmentPlugin);\n\thandleLinksToFragments(fragmentPlugin);\n\tshowDialogs(fragmentPlugin);\n};\n\n/**\n * Run `showModal` for all `<dialog[data-swup-fragment]>` elements\n * This puts them on the top layer and makes them ignore css `transform`s on parent elements\n * @see https://developer.mozilla.org/en-US/docs/Glossary/Top_layer\n */\nfunction showDialogs({ logger }: FragmentPlugin): void {\n\tdocument\n\t\t.querySelectorAll<HTMLDialogElement & FragmentElement>('dialog[data-swup-fragment]')\n\t\t.forEach((el) => {\n\t\t\tif (!el.__swupFragment) {\n\t\t\t\tif (__DEV__) logger?.warn(`fragment properties missing on element:`, el);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (el.__swupFragment.modalShown) return;\n\t\t\tel.__swupFragment.modalShown = true;\n\t\t\tel.removeAttribute('open');\n\t\t\tel.showModal?.();\n\t\t\tel.addEventListener('keydown', (e) => e.key === 'Escape' && e.preventDefault());\n\t\t});\n}\n\n/**\n * Updates the `href` of links matching [data-swup-link-to-fragment=\"#my-fragment\"]\n */\nfunction handleLinksToFragments({ logger, swup }: FragmentPlugin): void {\n\tconst targetAttribute = 'data-swup-link-to-fragment';\n\tconst links = document.querySelectorAll<HTMLAnchorElement>(`a[${targetAttribute}]`);\n\n\tlinks.forEach((el) => {\n\t\tconst selector = el.getAttribute(targetAttribute);\n\t\tif (!selector) {\n\t\t\t// prettier-ignore\n\t\t\tif (__DEV__) logger?.warn(`[${targetAttribute}] needs to contain a valid fragment selector`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst fragment = queryFragmentElement(selector, swup);\n\t\tif (!fragment) {\n\t\t\tif (__DEV__) {\n\t\t\t\tlogger?.log(\n\t\t\t\t\t// prettier-ignore\n\t\t\t\t\t`ignoring ${highlight(`[${targetAttribute}=\"${selector}\"]`)} as ${highlight(selector)} is missing`\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst fragmentUrl = fragment.__swupFragment?.url;\n\t\tif (!fragmentUrl) {\n\t\t\tif (__DEV__) logger?.warn(`no fragment infos found on ${selector}`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Help finding suspicious fragment urls\n\t\tif (isEqualUrl(fragmentUrl, swup.getCurrentUrl())) {\n\t\t\t// prettier-ignore\n\t\t\tif (__DEV__) logger?.warn(`The fragment URL of ${selector} is identical to the current URL. This could mean that [data-swup-fragment-url] needs to be provided by the server.`);\n\t\t}\n\n\t\tel.href = fragmentUrl;\n\t});\n}\n\n/**\n * Adds attributes and properties to fragment elements\n */\nfunction prepareFragmentElements({ parsedRules, swup, logger }: FragmentPlugin): void {\n\tconst currentUrl = swup.getCurrentUrl();\n\n\tparsedRules\n\t\t.filter((rule) => rule.matchesFrom(currentUrl) || rule.matchesTo(currentUrl))\n\t\t.forEach((rule) => {\n\t\t\trule.containers.forEach((selector) => {\n\t\t\t\tconst el = queryFragmentElement(`${selector}:not([data-swup-fragment])`, swup);\n\n\t\t\t\t// No element\n\t\t\t\tif (!el) return;\n\n\t\t\t\t// Parse a provided fragment URL\n\t\t\t\tconst providedFragmentUrl = el.getAttribute('data-swup-fragment-url');\n\t\t\t\tif (providedFragmentUrl) {\n\t\t\t\t\tif (__DEV__) {\n\t\t\t\t\t\t// prettier-ignore\n\t\t\t\t\t\tlogger?.log(`fragment url ${highlight(providedFragmentUrl)} for ${highlight(selector)} provided by server`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Get the fragment URL\n\t\t\t\tconst { url } = Location.fromUrl(providedFragmentUrl || currentUrl);\n\n\t\t\t\t// Mark the element as a fragment\n\t\t\t\tel.setAttribute('data-swup-fragment', '');\n\n\t\t\t\t// Augment the element with the necessary properties\n\t\t\t\tel.__swupFragment = { url, selector };\n\t\t\t});\n\t\t});\n}\n\n/**\n * Get all containers that should be replaced for a given visit's route.\n * Ignores containers that already match the current URL, if the visit can't be considered a reload.\n *\n * A visit is being considered a reload, if one of these conditions apply:\n * \t- `route.from` equal to `route.to`\n *  - all containers match the current url and swup is set to navigate on `linkToSelf`\n */\nexport const getFragmentVisitContainers = (\n\troute: Route,\n\tselectors: string[],\n\tswup: Swup,\n\tlogger?: Logger\n): string[] => {\n\tlet fragments: { selector: string; el: FragmentElement }[] = selectors\n\t\t.map((selector) => {\n\t\t\tconst el = document.querySelector<FragmentElement>(selector);\n\n\t\t\tif (!el) {\n\t\t\t\tif (__DEV__) logger?.log(`${highlight(selector)} missing in current document`);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst fragmentElement = queryFragmentElement(selector, swup);\n\n\t\t\tif (!fragmentElement) {\n\t\t\t\tif (__DEV__) {\n\t\t\t\t\t// prettier-ignore\n\t\t\t\t\tlogger?.error(`${highlight(selector)} is outside of swup's default containers`);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tselector,\n\t\t\t\tel\n\t\t\t};\n\t\t})\n\t\t.filter((record): record is { selector: string; el: FragmentElement } => !!record);\n\n\tconst isLinkToSelf = fragments.every((fragment) =>\n\t\telementMatchesFragmentUrl(fragment.el, route.to)\n\t);\n\n\tconst isReload =\n\t\tisEqualUrl(route.from, route.to) ||\n\t\t(isLinkToSelf && swup.options.linkToSelf === 'navigate');\n\n\t/**\n\t * If this is NOT a reload, ignore fragments that already match `route.to`\n\t */\n\tif (!isReload) {\n\t\tfragments = fragments.filter((fragment) => {\n\t\t\tif (elementMatchesFragmentUrl(fragment.el, route.to)) {\n\t\t\t\tif (__DEV__) {\n\t\t\t\t\t// prettier-ignore\n\t\t\t\t\tlogger?.log(`ignoring fragment ${highlight(fragment.selector)} as it already matches the current URL`);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t}\n\n\treturn fragments.map((fragment) => fragment.selector);\n};\n\n/**\n * Checks if an element's fragment url matches a given URL\n */\nexport const elementMatchesFragmentUrl = (el: FragmentElement, url: string): boolean => {\n\tconst fragmentUrl = el.__swupFragment?.url;\n\tif (!fragmentUrl) return false;\n\treturn isEqualUrl(fragmentUrl, url);\n};\n\n/**\n * Checks if two URLs should be considered equal:\n *\n * - ignores trailing slashes\n * - ignores query string order\n *\n * Example: /test?foo=bar&baz=boo === /test/?baz=boo&foo=bar\n */\nconst isEqualUrl = (url1: string, url2: string) => {\n\treturn normalizeUrl(url1) === normalizeUrl(url2);\n};\n\n/**\n * Normalize a URL\n *\n * - removes the trailing slash\n * - sorts query params\n */\nexport const normalizeUrl = (url: string) => {\n\tif (!url.trim()) return url;\n\n\tconst removeTrailingSlash = (str: string) => str.replace(/\\/+$/g, '');\n\n\tconst location = Location.fromUrl(url);\n\tlocation.searchParams.sort();\n\n\treturn removeTrailingSlash(location.pathname) + location.search;\n};\n\n/**\n * Removes all fragment traces from all fragment elements\n */\nexport const cleanupFragmentElements = () => {\n\tdocument.querySelectorAll<FragmentElement>('[data-swup-fragment]').forEach((el) => {\n\t\tel.removeAttribute('data-swup-fragment-url');\n\t\tdelete el.__swupFragment;\n\t});\n};\n\n/**\n * Get the route from a given visit\n */\nexport const getRoute = (visit: Visit): Route | undefined => {\n\tconst from = visit.from.url;\n\tconst to = visit.to.url;\n\tif (!from || !to) return;\n\treturn { from, to };\n};\n\n/**\n * Adds or removes a rule's name class from all current fragment elements\n */\nexport const toggleFragmentVisitClass = (\n\tfragmentVisit: FragmentVisit | undefined,\n\ttoggle: boolean\n): void => {\n\tif (!fragmentVisit?.name) return;\n\n\tconst { name, containers } = fragmentVisit;\n\n\tcontainers.forEach((selector) => {\n\t\tdocument.querySelector(selector)?.classList.toggle(`to-${name}`, toggle);\n\t});\n};\n\n/**\n * Get the first matching rule for a given route\n */\nexport const getFirstMatchingRule = (\n\troute: Route,\n\trules: ParsedRule[],\n\tvisit: Visit\n): ParsedRule | undefined => {\n\treturn rules.find((rule) => rule.matches(route, visit));\n};\n\n/**\n * Makes sure unchanged fragment elements land in the cache of the current page\n */\nexport const cacheForeignFragmentElements = ({ swup, logger }: FragmentPlugin): void => {\n\tconst currentUrl = swup.getCurrentUrl();\n\tconst cache = swup.cache;\n\n\t// Get the cache entry for the current URL\n\tconst currentCache = cache.get(currentUrl);\n\tif (!currentCache) return;\n\tconst currentCachedDocument = new DOMParser().parseFromString(currentCache.html, 'text/html');\n\n\t// debug info\n\tconst updatedFragments: FragmentElement[] = [];\n\n\t/**\n\t * We only want to handle fragment elements that\n\t *  - are not templates\n\t *  - don't fit the current URL\n\t */\n\tconst foreignFragmentElements = Array.from(\n\t\tdocument.querySelectorAll<FragmentElement>('[data-swup-fragment]')\n\t).filter((el) => {\n\t\tif (el.matches('template')) return false;\n\t\tif (elementMatchesFragmentUrl(el, currentUrl)) return false;\n\t\treturn true;\n\t});\n\n\t// Bail early if there are no foreign fragment elements\n\tif (!foreignFragmentElements.length) return;\n\n\tif (!swup.options.cache) {\n\t\tif (__DEV__) logger?.warn(`can't cache foreign fragment elements without swup's cache`);\n\t\treturn;\n\t}\n\n\tforeignFragmentElements.forEach((el) => {\n\t\t// Don't cache the fragment if it contains fragment elements\n\t\tconst containsFragments = el.querySelector('[data-swup-fragment]') != null;\n\t\tif (containsFragments) return;\n\n\t\tconst fragmentUrl = el.__swupFragment?.url;\n\t\tif (!fragmentUrl) {\n\t\t\tif (__DEV__) logger?.warn(`no fragment url found:`, el);\n\t\t\treturn;\n\t\t}\n\n\t\tconst fragmentSelector = el.__swupFragment?.selector;\n\t\tif (!fragmentSelector) {\n\t\t\tif (__DEV__) logger?.warn(`no fragment selector found:`, el);\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the cache entry for the fragment URL, bail early if it doesn't exist\n\t\tconst fragmentCache = cache.get(fragmentUrl);\n\t\tif (!fragmentCache) return;\n\n\t\t// Check if the fragment exists in the current cached document\n\t\tconst currentFragment = currentCachedDocument.querySelector(fragmentSelector);\n\t\tif (!currentFragment) return;\n\n\t\t// Get a fresh copy of the fragment from it's original cache\n\t\tconst unchangedFragment = new DOMParser()\n\t\t\t.parseFromString(fragmentCache.html, 'text/html')\n\t\t\t.querySelector(fragmentSelector);\n\t\tif (!unchangedFragment) return;\n\n\t\t// Make sure the dynamic fragment url makes it to the cache\n\t\tunchangedFragment.setAttribute('data-swup-fragment-url', fragmentUrl);\n\n\t\t// Replace the current fragment with the unchanged fragment\n\t\tcurrentFragment.replaceWith(unchangedFragment);\n\n\t\t// For debugging\n\t\tupdatedFragments.push(el);\n\t});\n\n\tif (!updatedFragments.length) return;\n\n\t// Update the cache of the current page with the updated html\n\tcache.update(currentUrl, {\n\t\tfragmentHtml: currentCachedDocument.documentElement.outerHTML\n\t});\n\n\tupdatedFragments.forEach((el) => {\n\t\tconst url = el.__swupFragment?.url || '';\n\t\tconst selector = el.__swupFragment?.selector || '';\n\t\t// prettier-ignore\n\t\tif (__DEV__) logger?.log(`updated cache with ${highlight(selector)} from ${highlight(url)}`);\n\t});\n};\n\n/**\n * Skips the animation if all current containers are <template> elements\n */\nexport function shouldSkipAnimation(fragmentVisit?: FragmentVisit): boolean {\n\tif (!fragmentVisit) return false;\n\n\treturn fragmentVisit.containers.every((selector) => {\n\t\treturn (\n\t\t\tdocument.querySelector<FragmentElement>(selector)?.tagName?.toLowerCase() === 'template'\n\t\t);\n\t});\n}\n\n/**\n * Remove duplicates from an array\n */\nexport function dedupe<T>(arr: Array<T>): Array<T> {\n\treturn [...new Set<T>(arr)];\n}\n\n/**\n * Adjusts visit.scroll based on given fragment visit\n */\nexport function adjustVisitScroll(fragmentVisit: FragmentVisit, scroll: VisitScroll): VisitScroll {\n\tif (typeof fragmentVisit.scroll === 'boolean') {\n\t\treturn { ...scroll, reset: fragmentVisit.scroll };\n\t}\n\tif (typeof fragmentVisit.scroll === 'string' && !scroll.target) {\n\t\treturn { ...scroll, target: fragmentVisit.scroll };\n\t}\n\treturn scroll;\n}\n\n/**\n * Queries a fragment element. Needs to be either:\n *\n * - one of swup's default containers\n * - inside of one of swup's default containers\n */\nexport function queryFragmentElement(\n\tfragmentSelector: string,\n\tswup: Swup\n): FragmentElement | undefined {\n\tfor (const containerSelector of swup.options.containers) {\n\t\tconst container = document.querySelector(containerSelector);\n\t\tif (container?.matches(fragmentSelector)) return container as FragmentElement;\n\n\t\tconst fragment = container?.querySelector<FragmentElement>(fragmentSelector);\n\t\tif (fragment) return fragment;\n\t}\n\treturn;\n}\n\n/**\n * Clone fragment rules (replacement for `structuredClone`)\n */\nexport function cloneRules(rules: Rule[]): Rule[] {\n\tif (!Array.isArray(rules)) throw new Error(`cloneRules() expects an array of rules`);\n\n\treturn rules.map((rule) => ({\n\t\t...rule,\n\t\tfrom: Array.isArray(rule.from) ? [...rule.from] : rule.from,\n\t\tto: Array.isArray(rule.to) ? [...rule.to] : rule.to,\n\t\tcontainers: [...rule.containers]\n\t}));\n}\n\n/**\n * Create a visit object for tests\n */\nexport function stubVisit(options: { from?: string; to: string }) {\n\tconst swup = new Swup();\n\t// @ts-expect-error swup.createVisit is protected\n\treturn swup.createVisit(options);\n}\n","import { matchPath, classify, Location } from 'swup';\nimport type { Swup, Path, Visit } from 'swup';\nimport type { Route, Rule, Predicate } from './defs.js';\nimport { dedupe, queryFragmentElement } from './functions.js';\nimport Logger, { highlight } from './Logger.js';\nimport { __DEV__ } from './env.js';\n\ntype Options = Rule & {\n\tswup: Swup;\n\tlogger?: Logger;\n};\n\n/**\n * Represents a Rule\n */\nexport default class ParsedRule {\n\treadonly matchesFrom: ReturnType<typeof matchPath>;\n\treadonly matchesTo: ReturnType<typeof matchPath>;\n\n\tswup: Swup;\n\tfrom: Path;\n\tto: Path;\n\tcontainers: string[];\n\tname?: string;\n\tscroll: boolean | string = false;\n\tfocus?: boolean | string;\n\tlogger?: Logger;\n\tif: Predicate = () => true;\n\n\tconstructor(options: Options) {\n\t\tthis.swup = options.swup;\n\t\tthis.logger = options.logger;\n\t\tthis.from = options.from || '';\n\t\tthis.to = options.to || '';\n\n\t\tif (options.name) this.name = classify(options.name);\n\t\tif (typeof options.scroll !== 'undefined') this.scroll = options.scroll;\n\t\tif (typeof options.focus !== 'undefined') this.focus = options.focus;\n\t\tif (typeof options.if === 'function') this.if = options.if;\n\n\t\tthis.containers = this.parseContainers(options.containers);\n\n\t\tif (__DEV__) {\n\t\t\tthis.logger?.errorIf(!this.to, `Every fragment rule must contain a 'to' path`, this);\n\t\t\tthis.logger?.errorIf(!this.from, `Every fragment rule must contain a 'from' path`, this); // prettier-ignore\n\t\t}\n\n\t\tthis.matchesFrom = matchPath(this.from);\n\t\tthis.matchesTo = matchPath(this.to);\n\t}\n\n\t/**\n\t * Parse provided fragment containers\n\t */\n\tparseContainers(rawContainers: string[]): string[] {\n\t\tif (!Array.isArray(rawContainers) || !rawContainers.length) {\n\t\t\t// prettier-ignore\n\t\t\tif (__DEV__) this.logger?.error(`Every fragment rule must contain an array of containers`, this.getDebugInfo());\n\t\t\treturn [];\n\t\t}\n\t\t// trim selectors\n\t\tconst containers = dedupe(rawContainers.map((selector) => selector.trim()));\n\t\treturn containers.filter((selector) => {\n\t\t\tconst result = this.validateSelector(selector);\n\t\t\tthis.logger?.errorIf(result instanceof Error, result);\n\t\t\treturn result === true;\n\t\t});\n\t}\n\n\t/**\n\t * Validate a fragment selector\n\t *\n\t * - only IDs are allowed\n\t * - no nested selectors\n\t */\n\tvalidateSelector(selector: string): true | Error {\n\t\tif (!selector.startsWith('#')) {\n\t\t\treturn new Error(`fragment selectors must be IDs: ${selector}`);\n\t\t}\n\n\t\tif (selector.match(/\\s|>/)) {\n\t\t\treturn new Error(`fragment selectors must not be nested: ${selector}`);\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Get debug info for logging\n\t */\n\tgetDebugInfo() {\n\t\tconst { from, to, containers } = this;\n\t\treturn {\n\t\t\tfrom: String(from),\n\t\t\tto: String(to),\n\t\t\tcontainers: String(containers)\n\t\t};\n\t}\n\n\t/**\n\t * Checks if a given route matches this rule\n\t */\n\tpublic matches(route: Route, visit: Visit): boolean {\n\t\tif (!this.if(visit)) {\n\t\t\tif (__DEV__) {\n\t\t\t\tthis.logger?.log(`ignoring fragment rule due to custom rule.if:`, this);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { url: fromUrl } = Location.fromUrl(route.from);\n\t\tconst { url: toUrl } = Location.fromUrl(route.to);\n\n\t\tconst matchesRoute = !!this.matchesFrom(fromUrl) && !!this.matchesTo(toUrl);\n\t\tif (!matchesRoute) return false;\n\n\t\tfor (const selector of this.containers) {\n\t\t\tconst result = this.validateFragmentSelectorForMatch(selector);\n\t\t\tif (result instanceof Error) {\n\t\t\t\tif (__DEV__) this.logger?.error(result, this.getDebugInfo());\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Validates a fragment element at runtime when this rule's route matches\n\t */\n\tvalidateFragmentSelectorForMatch(selector: string): true | Error {\n\t\tif (!document.querySelector(selector)) {\n\t\t\t// prettier-ignore\n\t\t\treturn new Error(`skipping rule since ${highlight(selector)} doesn't exist in the current document`);\n\t\t}\n\t\tif (!queryFragmentElement(selector, this.swup)) {\n\t\t\t// prettier-ignore\n\t\t\treturn new Error(`skipping rule since ${highlight(selector)} is outside of swup's default containers`);\n\t\t}\n\t\treturn true;\n\t}\n}\n","import type { Handler } from 'swup';\nimport { highlight } from './Logger.js';\nimport type { default as FragmentPlugin } from '../SwupFragmentPlugin.js';\n\nimport {\n\thandlePageView,\n\tgetRoute,\n\ttoggleFragmentVisitClass,\n\tgetFirstMatchingRule,\n\tcacheForeignFragmentElements,\n\tshouldSkipAnimation,\n\tadjustVisitScroll\n} from './functions.js';\n\nimport { __DEV__ } from './env.js';\n\n/**\n * Do not scroll if clicking on a link to the same page\n * and the route matches a fragment rule\n */\nexport const onLinkToSelf: Handler<'link:self'> = function (this: FragmentPlugin, visit) {\n\tconst route = getRoute(visit);\n\tif (!route) return;\n\n\tconst rule = getFirstMatchingRule(route, this.parsedRules, visit);\n\n\tif (rule) visit.scroll.reset = false;\n};\n\n/**\n * Prepare fragment visits\n */\nexport const onVisitStart: Handler<'visit:start'> = async function (this: FragmentPlugin, visit) {\n\tconst route = getRoute(visit);\n\tif (!route) return;\n\n\tconst fragmentVisit = this.getFragmentVisit(route, visit);\n\n\t/**\n\t * Bail early if the current route doesn't match\n\t * a rule or wouldn't replace any fragment elements\n\t */\n\tif (!fragmentVisit) return;\n\n\tvisit.fragmentVisit = fragmentVisit;\n\n\tif (__DEV__) {\n\t\tthis.logger?.log(`fragment visit: ${highlight(visit.fragmentVisit.containers.join(', '))}`);\n\t}\n\n\tvisit.scroll = adjustVisitScroll(fragmentVisit, visit.scroll);\n\n\t// Fragment Plugin can't know if Accesssibilty Plugin is installed\n\t// @ts-expect-error\n\tconst a11y = visit.a11y as { focus?: boolean | string };\n\tif (typeof fragmentVisit.focus !== 'undefined') {\n\t\tif (__DEV__) {\n\t\t\tthis.logger?.errorIf(\n\t\t\t\t!a11y,\n\t\t\t\t\"Can't set visit.a11y.focus. Is @swup/a11y-plugin installed?\"\n\t\t\t);\n\t\t}\n\t\tif (a11y) a11y.focus = fragmentVisit.focus;\n\t}\n\n\t// Add the transition classes directly to the containers for this visit\n\tvisit.animation.scope = visit.fragmentVisit.containers;\n\n\t// Overwrite the containers for this visit\n\tvisit.containers = visit.fragmentVisit.containers;\n\n\t// Overwrite the animationSelector for this visit\n\tvisit.animation.selector = visit.fragmentVisit.containers.join(',');\n\n\ttoggleFragmentVisitClass(fragmentVisit, true);\n};\n\n/**\n * Skips the out-animation for <template> fragment elements\n */\nexport const maybeSkipOutAnimation: Handler<'animation:out:await'> = function (\n\tthis: FragmentPlugin,\n\tvisit,\n\targs\n) {\n\tif (visit.fragmentVisit && shouldSkipAnimation(visit.fragmentVisit)) {\n\t\tif (__DEV__)\n\t\t\tthis.logger?.log(\n\t\t\t\t`${highlight('out')}-animation skipped for ${highlight(\n\t\t\t\t\tvisit.fragmentVisit?.containers.toString()\n\t\t\t\t)}`\n\t\t\t);\n\t\targs.skip = true;\n\t}\n};\n\n/**\n * Skips the in-animation for <template> fragment elements\n */\nexport const maybeSkipInAnimation: Handler<'animation:in:await'> = function (\n\tthis: FragmentPlugin,\n\tvisit,\n\targs\n) {\n\tif (visit.fragmentVisit && shouldSkipAnimation(visit.fragmentVisit)) {\n\t\tif (__DEV__)\n\t\t\tthis.logger?.log(\n\t\t\t\t`${highlight('in')}-animation skipped for ${highlight(\n\t\t\t\t\tvisit.fragmentVisit?.containers.toString()\n\t\t\t\t)}`\n\t\t\t);\n\t\targs.skip = true;\n\t}\n};\n\n/**\n * Runs directly before replacing the content\n */\nexport const beforeContentReplace: Handler<'content:replace'> = function (\n\tthis: FragmentPlugin,\n\tvisit,\n\targs\n) {\n\t/**\n\t * Only use the fragment cache if navigating without a trigger (e.g. link click)\n\t * (PopStateEvent, swup.navigate)\n\t */\n\tif (visit.trigger.el || !visit.to.url) return;\n\n\tconst cache = this.swup.cache.get(visit.to.url);\n\tif (!cache || !cache.fragmentHtml) return;\n\n\tvisit.to.document = new DOMParser().parseFromString(cache.fragmentHtml, 'text/html');\n\tvisit.to.html = cache.fragmentHtml;\n\n\tif (__DEV__) this.logger?.log(`fragment cache used for ${highlight(visit.to.url!)}`);\n};\n\n/**\n * Runs after the content was replaced\n */\nexport const onContentReplace: Handler<'content:replace'> = function (this: FragmentPlugin, visit) {\n\ttoggleFragmentVisitClass(visit.fragmentVisit, true);\n\thandlePageView(this);\n\tcacheForeignFragmentElements(this);\n};\n\n/**\n * Remove possible fragment rule names from fragment elements\n */\nexport const onVisitEnd: Handler<'visit:end'> = function (this: FragmentPlugin, visit) {\n\ttoggleFragmentVisitClass(visit.fragmentVisit, false);\n};\n","import PluginBase from '@swup/plugin';\nimport ParsedRule from './inc/ParsedRule.js';\nimport Logger from './inc/Logger.js';\nimport {\n\thandlePageView,\n\tcleanupFragmentElements,\n\tgetFirstMatchingRule,\n\tgetFragmentVisitContainers,\n\tcloneRules\n} from './inc/functions.js';\nimport type { Options, Rule, Route, FragmentVisit } from './inc/defs.js';\nimport * as handlers from './inc/handlers.js';\nimport { __DEV__ } from './inc/env.js';\nimport type { Visit } from 'swup';\n\ntype RequireKeys<T, K extends keyof T> = Partial<T> & Pick<T, K>;\ntype InitOptions = RequireKeys<Options, 'rules'>;\n\n/**\n * The main plugin class\n */\nexport default class SwupFragmentPlugin extends PluginBase {\n\treadonly name = 'SwupFragmentPlugin';\n\treadonly requires = { swup: '>=4.6' };\n\n\tprotected _rawRules: Rule[] = [];\n\tprotected _parsedRules: ParsedRule[] = [];\n\n\tget parsedRules() {\n\t\treturn this._parsedRules;\n\t}\n\n\toptions: Options;\n\n\tprotected defaults: Options = {\n\t\trules: [],\n\t\tdebug: false\n\t};\n\n\tlogger?: Logger;\n\n\t/**\n\t * Plugin Constructor\n\t * The options are NOT optional and need to contain at least a `rules` property\n\t */\n\tconstructor(options: InitOptions) {\n\t\tsuper();\n\t\tthis.options = { ...this.defaults, ...options };\n\t}\n\n\t/**\n\t * Runs when the plugin is being mounted\n\t */\n\tmount() {\n\t\tconst swup = this.swup;\n\n\t\tthis.setRules(this.options.rules);\n\t\tif (__DEV__) {\n\t\t\tif (this.options.debug) this.logger = new Logger();\n\t\t}\n\n\t\tthis.before('link:self', handlers.onLinkToSelf);\n\t\tthis.on('visit:start', handlers.onVisitStart);\n\t\tthis.before('animation:out:await', handlers.maybeSkipOutAnimation);\n\t\tthis.before('animation:in:await', handlers.maybeSkipInAnimation);\n\t\tthis.before('content:replace', handlers.beforeContentReplace);\n\t\tthis.on('content:replace', handlers.onContentReplace);\n\t\tthis.on('visit:end', handlers.onVisitEnd);\n\n\t\tif (__DEV__) {\n\t\t\tthis.logger?.warnIf(\n\t\t\t\t!swup.options.cache,\n\t\t\t\t`fragment caching will only work with swup's cache being active`\n\t\t\t);\n\t\t}\n\n\t\thandlePageView(this);\n\t}\n\n\t/**\n\t * Runs when the plugin is being unmounted\n\t */\n\tunmount() {\n\t\tsuper.unmount();\n\t\tcleanupFragmentElements();\n\t}\n\n\t/**\n\t * Set completely new rules\n\t *\n\t * @access public\n\t */\n\tsetRules(rules: Rule[]) {\n\t\tthis._rawRules = cloneRules(rules);\n\t\tthis._parsedRules = rules.map((rule) => this.parseRule(rule));\n\t\tif (__DEV__) this.logger?.log('Updated fragment rules', this.getRules());\n\t}\n\n\t/**\n\t * Get a clone of the current rules\n\t *\n\t * @access public\n\t */\n\tgetRules() {\n\t\treturn cloneRules(this._rawRules);\n\t}\n\n\t/**\n\t * Prepend a rule to the existing rules\n\t *\n\t * @access public\n\t */\n\tprependRule(rule: Rule) {\n\t\tthis.setRules([rule, ...this.getRules()]);\n\t}\n\n\t/**\n\t * Append a rule to the existing rules\n\t *\n\t * @access public\n\t */\n\tappendRule(rule: Rule) {\n\t\tthis.setRules([...this.getRules(), rule]);\n\t}\n\n\t/**\n\t * Parse a rule (for e.g. debugging)\n\t *\n\t * @access public\n\t */\n\tparseRule(rule: Rule): ParsedRule {\n\t\treturn new ParsedRule({\n\t\t\t...rule,\n\t\t\tlogger: this.logger,\n\t\t\tswup: this.swup\n\t\t});\n\t}\n\n\t/**\n\t * Get the fragment visit object for a given route\n\t *\n\t * @access public\n\t */\n\tgetFragmentVisit(route: Route, visit?: Visit): FragmentVisit | undefined {\n\t\tconst rule = getFirstMatchingRule(\n\t\t\troute,\n\t\t\tthis.parsedRules,\n\t\t\t// @ts-expect-error createVisit is protected\n\t\t\tvisit || this.swup.createVisit(route)\n\t\t);\n\n\t\t// Bail early if no rule matched\n\t\tif (!rule) return;\n\n\t\t// Get containers that should be replaced for this visit\n\t\tconst containers = getFragmentVisitContainers(\n\t\t\troute,\n\t\t\trule.containers,\n\t\t\tthis.swup,\n\t\t\tthis.logger\n\t\t);\n\n\t\t/** Bail early if there are no fragment elements found for this visit */\n\t\tif (!containers.length) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Pick properties from the current rule that should be projected into the fragmentVisit object\n\t\tconst { name, scroll, focus } = rule;\n\n\t\tconst fragmentVisit: FragmentVisit = {\n\t\t\tcontainers,\n\t\t\tname,\n\t\t\tscroll,\n\t\t\tfocus\n\t\t};\n\n\t\treturn fragmentVisit;\n\t}\n}\n"],"names":["window","process","env","__TEST__","includes","String","NODE_ENV","__DEV__","wrapInEscapeSequence","s","open","close","prepare","bold","highlight","purple","Logger","log","args","slice","call","arguments","msg","shift","console","warn","error","logIf","condition","this","warnIf","errorIf","handlePageView","fragmentPlugin","parsedRules","swup","logger","currentUrl","getCurrentUrl","filter","rule","matchesFrom","matchesTo","forEach","containers","selector","el","queryFragmentElement","providedFragmentUrl","getAttribute","url","Location","fromUrl","setAttribute","__swupFragment","prepareFragmentElements","targetAttribute","document","querySelectorAll","fragment","fragmentUrl","isEqualUrl","href","handleLinksToFragments","modalShown","removeAttribute","showModal","addEventListener","e","key","preventDefault","showDialogs","elementMatchesFragmentUrl","url1","url2","normalizeUrl","trim","location","searchParams","sort","pathname","replace","search","getRoute","visit","from","to","toggleFragmentVisitClass","fragmentVisit","toggle","name","querySelector","classList","getFirstMatchingRule","route","rules","find","matches","shouldSkipAnimation","every","tagName","toLowerCase","fragmentSelector","containerSelector","options","container","cloneRules","Array","isArray","Error","map","ParsedRule","constructor","scroll","focus","if","classify","parseContainers","matchPath","rawContainers","length","arr","Set","result","validateSelector","getDebugInfo","startsWith","match","toUrl","validateFragmentSelectorForMatch","onLinkToSelf","reset","onVisitStart","_this","Promise","resolve","getFragmentVisit","join","target","adjustVisitScroll","a11y","animation","scope","reject","maybeSkipOutAnimation","toString","skip","maybeSkipInAnimation","beforeContentReplace","trigger","cache","get","fragmentHtml","DOMParser","parseFromString","html","onContentReplace","cacheForeignFragmentElements","currentCache","currentCachedDocument","updatedFragments","foreignFragmentElements","fragmentCache","currentFragment","unchangedFragment","replaceWith","push","update","documentElement","outerHTML","onVisitEnd","SwupFragmentPlugin","PluginBase","_parsedRules","super","requires","_rawRules","defaults","debug","mount","setRules","before","handlers","on","unmount","parseRule","getRules","prependRule","appendRule","createVisit","getFragmentVisitContainers","selectors","fragments","record","isLinkToSelf","linkToSelf"],"mappings":"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"}