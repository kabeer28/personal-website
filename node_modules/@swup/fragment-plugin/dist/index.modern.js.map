{"version":3,"file":"index.modern.js","sources":["../src/inc/env.ts","../src/inc/Logger.ts","../src/inc/functions.ts","../src/inc/ParsedRule.ts","../src/inc/handlers.ts","../src/SwupFragmentPlugin.ts"],"sourcesContent":["declare global {\n\tconst __DEV__: boolean;\n\tconst MICROBUNDLE_TARGET: string;\n\tinterface Window {\n\t\tprocess?: any;\n\t}\n}\n\n/**\n * Make sure process.env is defined in the browser\n */\nif (!window.process) window.process = {};\nif (!window.process.env) window.process.env = {};\n\n/**\n * Export the __DEV__ variable. This will become false in production builds from consumers\n */\nexport const __TEST__ = ['test'].includes(String(process.env.NODE_ENV));\nexport const __DEV__ = ['development', 'test'].includes(String(process.env.NODE_ENV));\n","import { __TEST__ } from './env.js';\n/**\n * Wrap a string in an escape sequence\n * @see https://stackoverflow.com/a/68373080/586823\n */\nconst wrapInEscapeSequence = (s: string, open: number, close: number): string => {\n\tif (s == null) return s;\n\treturn `\\x1b[${open}m${String(s)}\\x1b[${close}m`;\n};\n\n/**\n * Color Codes:\n * @see https://github.com/lzwme/console-log-colors/blob/56a41b352bf9ed327cc864f588b831d92ee6390e/src/index.js\n */\nconst bold = (s: string): string => wrapInEscapeSequence(s, 1, 22);\nconst purple = (s: string): string => wrapInEscapeSequence(s, 94, 39);\n\nconst prepare = (s: string): string => {\n\tif (__TEST__) return s;\n\treturn `ðŸ§© ${bold(s)}`;\n};\n\nexport const highlight = (s: string): string => {\n\tif (__TEST__) return s;\n\treturn purple(s);\n};\n\n/**\n * A slim wrapper around console statements\n */\nexport default class Logger {\n\tlog(...args: any) {\n\t\tconst msg = args.shift();\n\t\tconsole.log(prepare(msg), ...args);\n\t}\n\twarn(...args: any) {\n\t\tconst msg = args.shift();\n\t\tconsole.warn(prepare(msg), ...args);\n\t}\n\terror(...args: any) {\n\t\tconst msg = args.shift();\n\t\tconsole.error(prepare(msg), ...args);\n\t}\n\tlogIf(condition: boolean, ...args: any) {\n\t\tif (condition) this.log(...args);\n\t}\n\twarnIf(condition: boolean, ...args: any) {\n\t\tif (condition) this.warn(...args);\n\t}\n\terrorIf(condition: boolean, ...args: any) {\n\t\tif (condition) this.error(...args);\n\t}\n}\n","import Swup, { Location } from 'swup';\nimport type { Visit, VisitScroll } from 'swup';\nimport type { default as FragmentPlugin } from '../SwupFragmentPlugin.js';\nimport type { Route, Rule, FragmentVisit, FragmentElement } from './defs.js';\nimport type ParsedRule from './ParsedRule.js';\nimport Logger, { highlight } from './Logger.js';\n\nimport { __DEV__ } from './env.js';\n\n/**\n * Handles a page view. Runs on `mount` as well as on every content:replace\n */\nexport const handlePageView = (fragmentPlugin: FragmentPlugin): void => {\n\tprepareFragmentElements(fragmentPlugin);\n\thandleLinksToFragments(fragmentPlugin);\n\tshowDialogs(fragmentPlugin);\n};\n\n/**\n * Run `showModal` for all `<dialog[data-swup-fragment]>` elements\n * This puts them on the top layer and makes them ignore css `transform`s on parent elements\n * @see https://developer.mozilla.org/en-US/docs/Glossary/Top_layer\n */\nfunction showDialogs({ logger }: FragmentPlugin): void {\n\tdocument\n\t\t.querySelectorAll<HTMLDialogElement & FragmentElement>('dialog[data-swup-fragment]')\n\t\t.forEach((el) => {\n\t\t\tif (!el.__swupFragment) {\n\t\t\t\tif (__DEV__) logger?.warn(`fragment properties missing on element:`, el);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (el.__swupFragment.modalShown) return;\n\t\t\tel.__swupFragment.modalShown = true;\n\t\t\tel.removeAttribute('open');\n\t\t\tel.showModal?.();\n\t\t\tel.addEventListener('keydown', (e) => e.key === 'Escape' && e.preventDefault());\n\t\t});\n}\n\n/**\n * Updates the `href` of links matching [data-swup-link-to-fragment=\"#my-fragment\"]\n */\nfunction handleLinksToFragments({ logger, swup }: FragmentPlugin): void {\n\tconst targetAttribute = 'data-swup-link-to-fragment';\n\tconst links = document.querySelectorAll<HTMLAnchorElement>(`a[${targetAttribute}]`);\n\n\tlinks.forEach((el) => {\n\t\tconst selector = el.getAttribute(targetAttribute);\n\t\tif (!selector) {\n\t\t\t// prettier-ignore\n\t\t\tif (__DEV__) logger?.warn(`[${targetAttribute}] needs to contain a valid fragment selector`);\n\t\t\treturn;\n\t\t}\n\n\t\tconst fragment = queryFragmentElement(selector, swup);\n\t\tif (!fragment) {\n\t\t\tif (__DEV__) {\n\t\t\t\tlogger?.log(\n\t\t\t\t\t// prettier-ignore\n\t\t\t\t\t`ignoring ${highlight(`[${targetAttribute}=\"${selector}\"]`)} as ${highlight(selector)} is missing`\n\t\t\t\t);\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tconst fragmentUrl = fragment.__swupFragment?.url;\n\t\tif (!fragmentUrl) {\n\t\t\tif (__DEV__) logger?.warn(`no fragment infos found on ${selector}`);\n\t\t\treturn;\n\t\t}\n\n\t\t// Help finding suspicious fragment urls\n\t\tif (isEqualUrl(fragmentUrl, swup.getCurrentUrl())) {\n\t\t\t// prettier-ignore\n\t\t\tif (__DEV__) logger?.warn(`The fragment URL of ${selector} is identical to the current URL. This could mean that [data-swup-fragment-url] needs to be provided by the server.`);\n\t\t}\n\n\t\tel.href = fragmentUrl;\n\t});\n}\n\n/**\n * Adds attributes and properties to fragment elements\n */\nfunction prepareFragmentElements({ parsedRules, swup, logger }: FragmentPlugin): void {\n\tconst currentUrl = swup.getCurrentUrl();\n\n\tparsedRules\n\t\t.filter((rule) => rule.matchesFrom(currentUrl) || rule.matchesTo(currentUrl))\n\t\t.forEach((rule) => {\n\t\t\trule.containers.forEach((selector) => {\n\t\t\t\tconst el = queryFragmentElement(`${selector}:not([data-swup-fragment])`, swup);\n\n\t\t\t\t// No element\n\t\t\t\tif (!el) return;\n\n\t\t\t\t// Parse a provided fragment URL\n\t\t\t\tconst providedFragmentUrl = el.getAttribute('data-swup-fragment-url');\n\t\t\t\tif (providedFragmentUrl) {\n\t\t\t\t\tif (__DEV__) {\n\t\t\t\t\t\t// prettier-ignore\n\t\t\t\t\t\tlogger?.log(`fragment url ${highlight(providedFragmentUrl)} for ${highlight(selector)} provided by server`);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Get the fragment URL\n\t\t\t\tconst { url } = Location.fromUrl(providedFragmentUrl || currentUrl);\n\n\t\t\t\t// Mark the element as a fragment\n\t\t\t\tel.setAttribute('data-swup-fragment', '');\n\n\t\t\t\t// Augment the element with the necessary properties\n\t\t\t\tel.__swupFragment = { url, selector };\n\t\t\t});\n\t\t});\n}\n\n/**\n * Get all containers that should be replaced for a given visit's route.\n * Ignores containers that already match the current URL, if the visit can't be considered a reload.\n *\n * A visit is being considered a reload, if one of these conditions apply:\n * \t- `route.from` equal to `route.to`\n *  - all containers match the current url and swup is set to navigate on `linkToSelf`\n */\nexport const getFragmentVisitContainers = (\n\troute: Route,\n\tselectors: string[],\n\tswup: Swup,\n\tlogger?: Logger\n): string[] => {\n\tlet fragments: { selector: string; el: FragmentElement }[] = selectors\n\t\t.map((selector) => {\n\t\t\tconst el = document.querySelector<FragmentElement>(selector);\n\n\t\t\tif (!el) {\n\t\t\t\tif (__DEV__) logger?.log(`${highlight(selector)} missing in current document`);\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\tconst fragmentElement = queryFragmentElement(selector, swup);\n\n\t\t\tif (!fragmentElement) {\n\t\t\t\tif (__DEV__) {\n\t\t\t\t\t// prettier-ignore\n\t\t\t\t\tlogger?.error(`${highlight(selector)} is outside of swup's default containers`);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tselector,\n\t\t\t\tel\n\t\t\t};\n\t\t})\n\t\t.filter((record): record is { selector: string; el: FragmentElement } => !!record);\n\n\tconst isLinkToSelf = fragments.every((fragment) =>\n\t\telementMatchesFragmentUrl(fragment.el, route.to)\n\t);\n\n\tconst isReload =\n\t\tisEqualUrl(route.from, route.to) ||\n\t\t(isLinkToSelf && swup.options.linkToSelf === 'navigate');\n\n\t/**\n\t * If this is NOT a reload, ignore fragments that already match `route.to`\n\t */\n\tif (!isReload) {\n\t\tfragments = fragments.filter((fragment) => {\n\t\t\tif (elementMatchesFragmentUrl(fragment.el, route.to)) {\n\t\t\t\tif (__DEV__) {\n\t\t\t\t\t// prettier-ignore\n\t\t\t\t\tlogger?.log(`ignoring fragment ${highlight(fragment.selector)} as it already matches the current URL`);\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t});\n\t}\n\n\treturn fragments.map((fragment) => fragment.selector);\n};\n\n/**\n * Checks if an element's fragment url matches a given URL\n */\nexport const elementMatchesFragmentUrl = (el: FragmentElement, url: string): boolean => {\n\tconst fragmentUrl = el.__swupFragment?.url;\n\tif (!fragmentUrl) return false;\n\treturn isEqualUrl(fragmentUrl, url);\n};\n\n/**\n * Checks if two URLs should be considered equal:\n *\n * - ignores trailing slashes\n * - ignores query string order\n *\n * Example: /test?foo=bar&baz=boo === /test/?baz=boo&foo=bar\n */\nconst isEqualUrl = (url1: string, url2: string) => {\n\treturn normalizeUrl(url1) === normalizeUrl(url2);\n};\n\n/**\n * Normalize a URL\n *\n * - removes the trailing slash\n * - sorts query params\n */\nexport const normalizeUrl = (url: string) => {\n\tif (!url.trim()) return url;\n\n\tconst removeTrailingSlash = (str: string) => str.replace(/\\/+$/g, '');\n\n\tconst location = Location.fromUrl(url);\n\tlocation.searchParams.sort();\n\n\treturn removeTrailingSlash(location.pathname) + location.search;\n};\n\n/**\n * Removes all fragment traces from all fragment elements\n */\nexport const cleanupFragmentElements = () => {\n\tdocument.querySelectorAll<FragmentElement>('[data-swup-fragment]').forEach((el) => {\n\t\tel.removeAttribute('data-swup-fragment-url');\n\t\tdelete el.__swupFragment;\n\t});\n};\n\n/**\n * Get the route from a given visit\n */\nexport const getRoute = (visit: Visit): Route | undefined => {\n\tconst from = visit.from.url;\n\tconst to = visit.to.url;\n\tif (!from || !to) return;\n\treturn { from, to };\n};\n\n/**\n * Adds or removes a rule's name class from all current fragment elements\n */\nexport const toggleFragmentVisitClass = (\n\tfragmentVisit: FragmentVisit | undefined,\n\ttoggle: boolean\n): void => {\n\tif (!fragmentVisit?.name) return;\n\n\tconst { name, containers } = fragmentVisit;\n\n\tcontainers.forEach((selector) => {\n\t\tdocument.querySelector(selector)?.classList.toggle(`to-${name}`, toggle);\n\t});\n};\n\n/**\n * Get the first matching rule for a given route\n */\nexport const getFirstMatchingRule = (\n\troute: Route,\n\trules: ParsedRule[],\n\tvisit: Visit\n): ParsedRule | undefined => {\n\treturn rules.find((rule) => rule.matches(route, visit));\n};\n\n/**\n * Makes sure unchanged fragment elements land in the cache of the current page\n */\nexport const cacheForeignFragmentElements = ({ swup, logger }: FragmentPlugin): void => {\n\tconst currentUrl = swup.getCurrentUrl();\n\tconst cache = swup.cache;\n\n\t// Get the cache entry for the current URL\n\tconst currentCache = cache.get(currentUrl);\n\tif (!currentCache) return;\n\tconst currentCachedDocument = new DOMParser().parseFromString(currentCache.html, 'text/html');\n\n\t// debug info\n\tconst updatedFragments: FragmentElement[] = [];\n\n\t/**\n\t * We only want to handle fragment elements that\n\t *  - are not templates\n\t *  - don't fit the current URL\n\t */\n\tconst foreignFragmentElements = Array.from(\n\t\tdocument.querySelectorAll<FragmentElement>('[data-swup-fragment]')\n\t).filter((el) => {\n\t\tif (el.matches('template')) return false;\n\t\tif (elementMatchesFragmentUrl(el, currentUrl)) return false;\n\t\treturn true;\n\t});\n\n\t// Bail early if there are no foreign fragment elements\n\tif (!foreignFragmentElements.length) return;\n\n\tif (!swup.options.cache) {\n\t\tif (__DEV__) logger?.warn(`can't cache foreign fragment elements without swup's cache`);\n\t\treturn;\n\t}\n\n\tforeignFragmentElements.forEach((el) => {\n\t\t// Don't cache the fragment if it contains fragment elements\n\t\tconst containsFragments = el.querySelector('[data-swup-fragment]') != null;\n\t\tif (containsFragments) return;\n\n\t\tconst fragmentUrl = el.__swupFragment?.url;\n\t\tif (!fragmentUrl) {\n\t\t\tif (__DEV__) logger?.warn(`no fragment url found:`, el);\n\t\t\treturn;\n\t\t}\n\n\t\tconst fragmentSelector = el.__swupFragment?.selector;\n\t\tif (!fragmentSelector) {\n\t\t\tif (__DEV__) logger?.warn(`no fragment selector found:`, el);\n\t\t\treturn;\n\t\t}\n\n\t\t// Get the cache entry for the fragment URL, bail early if it doesn't exist\n\t\tconst fragmentCache = cache.get(fragmentUrl);\n\t\tif (!fragmentCache) return;\n\n\t\t// Check if the fragment exists in the current cached document\n\t\tconst currentFragment = currentCachedDocument.querySelector(fragmentSelector);\n\t\tif (!currentFragment) return;\n\n\t\t// Get a fresh copy of the fragment from it's original cache\n\t\tconst unchangedFragment = new DOMParser()\n\t\t\t.parseFromString(fragmentCache.html, 'text/html')\n\t\t\t.querySelector(fragmentSelector);\n\t\tif (!unchangedFragment) return;\n\n\t\t// Make sure the dynamic fragment url makes it to the cache\n\t\tunchangedFragment.setAttribute('data-swup-fragment-url', fragmentUrl);\n\n\t\t// Replace the current fragment with the unchanged fragment\n\t\tcurrentFragment.replaceWith(unchangedFragment);\n\n\t\t// For debugging\n\t\tupdatedFragments.push(el);\n\t});\n\n\tif (!updatedFragments.length) return;\n\n\t// Update the cache of the current page with the updated html\n\tcache.update(currentUrl, {\n\t\tfragmentHtml: currentCachedDocument.documentElement.outerHTML\n\t});\n\n\tupdatedFragments.forEach((el) => {\n\t\tconst url = el.__swupFragment?.url || '';\n\t\tconst selector = el.__swupFragment?.selector || '';\n\t\t// prettier-ignore\n\t\tif (__DEV__) logger?.log(`updated cache with ${highlight(selector)} from ${highlight(url)}`);\n\t});\n};\n\n/**\n * Skips the animation if all current containers are <template> elements\n */\nexport function shouldSkipAnimation(fragmentVisit?: FragmentVisit): boolean {\n\tif (!fragmentVisit) return false;\n\n\treturn fragmentVisit.containers.every((selector) => {\n\t\treturn (\n\t\t\tdocument.querySelector<FragmentElement>(selector)?.tagName?.toLowerCase() === 'template'\n\t\t);\n\t});\n}\n\n/**\n * Remove duplicates from an array\n */\nexport function dedupe<T>(arr: Array<T>): Array<T> {\n\treturn [...new Set<T>(arr)];\n}\n\n/**\n * Adjusts visit.scroll based on given fragment visit\n */\nexport function adjustVisitScroll(fragmentVisit: FragmentVisit, scroll: VisitScroll): VisitScroll {\n\tif (typeof fragmentVisit.scroll === 'boolean') {\n\t\treturn { ...scroll, reset: fragmentVisit.scroll };\n\t}\n\tif (typeof fragmentVisit.scroll === 'string' && !scroll.target) {\n\t\treturn { ...scroll, target: fragmentVisit.scroll };\n\t}\n\treturn scroll;\n}\n\n/**\n * Queries a fragment element. Needs to be either:\n *\n * - one of swup's default containers\n * - inside of one of swup's default containers\n */\nexport function queryFragmentElement(\n\tfragmentSelector: string,\n\tswup: Swup\n): FragmentElement | undefined {\n\tfor (const containerSelector of swup.options.containers) {\n\t\tconst container = document.querySelector(containerSelector);\n\t\tif (container?.matches(fragmentSelector)) return container as FragmentElement;\n\n\t\tconst fragment = container?.querySelector<FragmentElement>(fragmentSelector);\n\t\tif (fragment) return fragment;\n\t}\n\treturn;\n}\n\n/**\n * Clone fragment rules (replacement for `structuredClone`)\n */\nexport function cloneRules(rules: Rule[]): Rule[] {\n\tif (!Array.isArray(rules)) throw new Error(`cloneRules() expects an array of rules`);\n\n\treturn rules.map((rule) => ({\n\t\t...rule,\n\t\tfrom: Array.isArray(rule.from) ? [...rule.from] : rule.from,\n\t\tto: Array.isArray(rule.to) ? [...rule.to] : rule.to,\n\t\tcontainers: [...rule.containers]\n\t}));\n}\n\n/**\n * Create a visit object for tests\n */\nexport function stubVisit(options: { from?: string; to: string }) {\n\tconst swup = new Swup();\n\t// @ts-expect-error swup.createVisit is protected\n\treturn swup.createVisit(options);\n}\n","import { matchPath, classify, Location } from 'swup';\nimport type { Swup, Path, Visit } from 'swup';\nimport type { Route, Rule, Predicate } from './defs.js';\nimport { dedupe, queryFragmentElement } from './functions.js';\nimport Logger, { highlight } from './Logger.js';\nimport { __DEV__ } from './env.js';\n\ntype Options = Rule & {\n\tswup: Swup;\n\tlogger?: Logger;\n};\n\n/**\n * Represents a Rule\n */\nexport default class ParsedRule {\n\treadonly matchesFrom: ReturnType<typeof matchPath>;\n\treadonly matchesTo: ReturnType<typeof matchPath>;\n\n\tswup: Swup;\n\tfrom: Path;\n\tto: Path;\n\tcontainers: string[];\n\tname?: string;\n\tscroll: boolean | string = false;\n\tfocus?: boolean | string;\n\tlogger?: Logger;\n\tif: Predicate = () => true;\n\n\tconstructor(options: Options) {\n\t\tthis.swup = options.swup;\n\t\tthis.logger = options.logger;\n\t\tthis.from = options.from || '';\n\t\tthis.to = options.to || '';\n\n\t\tif (options.name) this.name = classify(options.name);\n\t\tif (typeof options.scroll !== 'undefined') this.scroll = options.scroll;\n\t\tif (typeof options.focus !== 'undefined') this.focus = options.focus;\n\t\tif (typeof options.if === 'function') this.if = options.if;\n\n\t\tthis.containers = this.parseContainers(options.containers);\n\n\t\tif (__DEV__) {\n\t\t\tthis.logger?.errorIf(!this.to, `Every fragment rule must contain a 'to' path`, this);\n\t\t\tthis.logger?.errorIf(!this.from, `Every fragment rule must contain a 'from' path`, this); // prettier-ignore\n\t\t}\n\n\t\tthis.matchesFrom = matchPath(this.from);\n\t\tthis.matchesTo = matchPath(this.to);\n\t}\n\n\t/**\n\t * Parse provided fragment containers\n\t */\n\tparseContainers(rawContainers: string[]): string[] {\n\t\tif (!Array.isArray(rawContainers) || !rawContainers.length) {\n\t\t\t// prettier-ignore\n\t\t\tif (__DEV__) this.logger?.error(`Every fragment rule must contain an array of containers`, this.getDebugInfo());\n\t\t\treturn [];\n\t\t}\n\t\t// trim selectors\n\t\tconst containers = dedupe(rawContainers.map((selector) => selector.trim()));\n\t\treturn containers.filter((selector) => {\n\t\t\tconst result = this.validateSelector(selector);\n\t\t\tthis.logger?.errorIf(result instanceof Error, result);\n\t\t\treturn result === true;\n\t\t});\n\t}\n\n\t/**\n\t * Validate a fragment selector\n\t *\n\t * - only IDs are allowed\n\t * - no nested selectors\n\t */\n\tvalidateSelector(selector: string): true | Error {\n\t\tif (!selector.startsWith('#')) {\n\t\t\treturn new Error(`fragment selectors must be IDs: ${selector}`);\n\t\t}\n\n\t\tif (selector.match(/\\s|>/)) {\n\t\t\treturn new Error(`fragment selectors must not be nested: ${selector}`);\n\t\t}\n\t\treturn true;\n\t}\n\n\t/**\n\t * Get debug info for logging\n\t */\n\tgetDebugInfo() {\n\t\tconst { from, to, containers } = this;\n\t\treturn {\n\t\t\tfrom: String(from),\n\t\t\tto: String(to),\n\t\t\tcontainers: String(containers)\n\t\t};\n\t}\n\n\t/**\n\t * Checks if a given route matches this rule\n\t */\n\tpublic matches(route: Route, visit: Visit): boolean {\n\t\tif (!this.if(visit)) {\n\t\t\tif (__DEV__) {\n\t\t\t\tthis.logger?.log(`ignoring fragment rule due to custom rule.if:`, this);\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tconst { url: fromUrl } = Location.fromUrl(route.from);\n\t\tconst { url: toUrl } = Location.fromUrl(route.to);\n\n\t\tconst matchesRoute = !!this.matchesFrom(fromUrl) && !!this.matchesTo(toUrl);\n\t\tif (!matchesRoute) return false;\n\n\t\tfor (const selector of this.containers) {\n\t\t\tconst result = this.validateFragmentSelectorForMatch(selector);\n\t\t\tif (result instanceof Error) {\n\t\t\t\tif (__DEV__) this.logger?.error(result, this.getDebugInfo());\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Validates a fragment element at runtime when this rule's route matches\n\t */\n\tvalidateFragmentSelectorForMatch(selector: string): true | Error {\n\t\tif (!document.querySelector(selector)) {\n\t\t\t// prettier-ignore\n\t\t\treturn new Error(`skipping rule since ${highlight(selector)} doesn't exist in the current document`);\n\t\t}\n\t\tif (!queryFragmentElement(selector, this.swup)) {\n\t\t\t// prettier-ignore\n\t\t\treturn new Error(`skipping rule since ${highlight(selector)} is outside of swup's default containers`);\n\t\t}\n\t\treturn true;\n\t}\n}\n","import type { Handler } from 'swup';\nimport { highlight } from './Logger.js';\nimport type { default as FragmentPlugin } from '../SwupFragmentPlugin.js';\n\nimport {\n\thandlePageView,\n\tgetRoute,\n\ttoggleFragmentVisitClass,\n\tgetFirstMatchingRule,\n\tcacheForeignFragmentElements,\n\tshouldSkipAnimation,\n\tadjustVisitScroll\n} from './functions.js';\n\nimport { __DEV__ } from './env.js';\n\n/**\n * Do not scroll if clicking on a link to the same page\n * and the route matches a fragment rule\n */\nexport const onLinkToSelf: Handler<'link:self'> = function (this: FragmentPlugin, visit) {\n\tconst route = getRoute(visit);\n\tif (!route) return;\n\n\tconst rule = getFirstMatchingRule(route, this.parsedRules, visit);\n\n\tif (rule) visit.scroll.reset = false;\n};\n\n/**\n * Prepare fragment visits\n */\nexport const onVisitStart: Handler<'visit:start'> = async function (this: FragmentPlugin, visit) {\n\tconst route = getRoute(visit);\n\tif (!route) return;\n\n\tconst fragmentVisit = this.getFragmentVisit(route, visit);\n\n\t/**\n\t * Bail early if the current route doesn't match\n\t * a rule or wouldn't replace any fragment elements\n\t */\n\tif (!fragmentVisit) return;\n\n\tvisit.fragmentVisit = fragmentVisit;\n\n\tif (__DEV__) {\n\t\tthis.logger?.log(`fragment visit: ${highlight(visit.fragmentVisit.containers.join(', '))}`);\n\t}\n\n\tvisit.scroll = adjustVisitScroll(fragmentVisit, visit.scroll);\n\n\t// Fragment Plugin can't know if Accesssibilty Plugin is installed\n\t// @ts-expect-error\n\tconst a11y = visit.a11y as { focus?: boolean | string };\n\tif (typeof fragmentVisit.focus !== 'undefined') {\n\t\tif (__DEV__) {\n\t\t\tthis.logger?.errorIf(\n\t\t\t\t!a11y,\n\t\t\t\t\"Can't set visit.a11y.focus. Is @swup/a11y-plugin installed?\"\n\t\t\t);\n\t\t}\n\t\tif (a11y) a11y.focus = fragmentVisit.focus;\n\t}\n\n\t// Add the transition classes directly to the containers for this visit\n\tvisit.animation.scope = visit.fragmentVisit.containers;\n\n\t// Overwrite the containers for this visit\n\tvisit.containers = visit.fragmentVisit.containers;\n\n\t// Overwrite the animationSelector for this visit\n\tvisit.animation.selector = visit.fragmentVisit.containers.join(',');\n\n\ttoggleFragmentVisitClass(fragmentVisit, true);\n};\n\n/**\n * Skips the out-animation for <template> fragment elements\n */\nexport const maybeSkipOutAnimation: Handler<'animation:out:await'> = function (\n\tthis: FragmentPlugin,\n\tvisit,\n\targs\n) {\n\tif (visit.fragmentVisit && shouldSkipAnimation(visit.fragmentVisit)) {\n\t\tif (__DEV__)\n\t\t\tthis.logger?.log(\n\t\t\t\t`${highlight('out')}-animation skipped for ${highlight(\n\t\t\t\t\tvisit.fragmentVisit?.containers.toString()\n\t\t\t\t)}`\n\t\t\t);\n\t\targs.skip = true;\n\t}\n};\n\n/**\n * Skips the in-animation for <template> fragment elements\n */\nexport const maybeSkipInAnimation: Handler<'animation:in:await'> = function (\n\tthis: FragmentPlugin,\n\tvisit,\n\targs\n) {\n\tif (visit.fragmentVisit && shouldSkipAnimation(visit.fragmentVisit)) {\n\t\tif (__DEV__)\n\t\t\tthis.logger?.log(\n\t\t\t\t`${highlight('in')}-animation skipped for ${highlight(\n\t\t\t\t\tvisit.fragmentVisit?.containers.toString()\n\t\t\t\t)}`\n\t\t\t);\n\t\targs.skip = true;\n\t}\n};\n\n/**\n * Runs directly before replacing the content\n */\nexport const beforeContentReplace: Handler<'content:replace'> = function (\n\tthis: FragmentPlugin,\n\tvisit,\n\targs\n) {\n\t/**\n\t * Only use the fragment cache if navigating without a trigger (e.g. link click)\n\t * (PopStateEvent, swup.navigate)\n\t */\n\tif (visit.trigger.el || !visit.to.url) return;\n\n\tconst cache = this.swup.cache.get(visit.to.url);\n\tif (!cache || !cache.fragmentHtml) return;\n\n\tvisit.to.document = new DOMParser().parseFromString(cache.fragmentHtml, 'text/html');\n\tvisit.to.html = cache.fragmentHtml;\n\n\tif (__DEV__) this.logger?.log(`fragment cache used for ${highlight(visit.to.url!)}`);\n};\n\n/**\n * Runs after the content was replaced\n */\nexport const onContentReplace: Handler<'content:replace'> = function (this: FragmentPlugin, visit) {\n\ttoggleFragmentVisitClass(visit.fragmentVisit, true);\n\thandlePageView(this);\n\tcacheForeignFragmentElements(this);\n};\n\n/**\n * Remove possible fragment rule names from fragment elements\n */\nexport const onVisitEnd: Handler<'visit:end'> = function (this: FragmentPlugin, visit) {\n\ttoggleFragmentVisitClass(visit.fragmentVisit, false);\n};\n","import PluginBase from '@swup/plugin';\nimport ParsedRule from './inc/ParsedRule.js';\nimport Logger from './inc/Logger.js';\nimport {\n\thandlePageView,\n\tcleanupFragmentElements,\n\tgetFirstMatchingRule,\n\tgetFragmentVisitContainers,\n\tcloneRules\n} from './inc/functions.js';\nimport type { Options, Rule, Route, FragmentVisit } from './inc/defs.js';\nimport * as handlers from './inc/handlers.js';\nimport { __DEV__ } from './inc/env.js';\nimport type { Visit } from 'swup';\n\ntype RequireKeys<T, K extends keyof T> = Partial<T> & Pick<T, K>;\ntype InitOptions = RequireKeys<Options, 'rules'>;\n\n/**\n * The main plugin class\n */\nexport default class SwupFragmentPlugin extends PluginBase {\n\treadonly name = 'SwupFragmentPlugin';\n\treadonly requires = { swup: '>=4.6' };\n\n\tprotected _rawRules: Rule[] = [];\n\tprotected _parsedRules: ParsedRule[] = [];\n\n\tget parsedRules() {\n\t\treturn this._parsedRules;\n\t}\n\n\toptions: Options;\n\n\tprotected defaults: Options = {\n\t\trules: [],\n\t\tdebug: false\n\t};\n\n\tlogger?: Logger;\n\n\t/**\n\t * Plugin Constructor\n\t * The options are NOT optional and need to contain at least a `rules` property\n\t */\n\tconstructor(options: InitOptions) {\n\t\tsuper();\n\t\tthis.options = { ...this.defaults, ...options };\n\t}\n\n\t/**\n\t * Runs when the plugin is being mounted\n\t */\n\tmount() {\n\t\tconst swup = this.swup;\n\n\t\tthis.setRules(this.options.rules);\n\t\tif (__DEV__) {\n\t\t\tif (this.options.debug) this.logger = new Logger();\n\t\t}\n\n\t\tthis.before('link:self', handlers.onLinkToSelf);\n\t\tthis.on('visit:start', handlers.onVisitStart);\n\t\tthis.before('animation:out:await', handlers.maybeSkipOutAnimation);\n\t\tthis.before('animation:in:await', handlers.maybeSkipInAnimation);\n\t\tthis.before('content:replace', handlers.beforeContentReplace);\n\t\tthis.on('content:replace', handlers.onContentReplace);\n\t\tthis.on('visit:end', handlers.onVisitEnd);\n\n\t\tif (__DEV__) {\n\t\t\tthis.logger?.warnIf(\n\t\t\t\t!swup.options.cache,\n\t\t\t\t`fragment caching will only work with swup's cache being active`\n\t\t\t);\n\t\t}\n\n\t\thandlePageView(this);\n\t}\n\n\t/**\n\t * Runs when the plugin is being unmounted\n\t */\n\tunmount() {\n\t\tsuper.unmount();\n\t\tcleanupFragmentElements();\n\t}\n\n\t/**\n\t * Set completely new rules\n\t *\n\t * @access public\n\t */\n\tsetRules(rules: Rule[]) {\n\t\tthis._rawRules = cloneRules(rules);\n\t\tthis._parsedRules = rules.map((rule) => this.parseRule(rule));\n\t\tif (__DEV__) this.logger?.log('Updated fragment rules', this.getRules());\n\t}\n\n\t/**\n\t * Get a clone of the current rules\n\t *\n\t * @access public\n\t */\n\tgetRules() {\n\t\treturn cloneRules(this._rawRules);\n\t}\n\n\t/**\n\t * Prepend a rule to the existing rules\n\t *\n\t * @access public\n\t */\n\tprependRule(rule: Rule) {\n\t\tthis.setRules([rule, ...this.getRules()]);\n\t}\n\n\t/**\n\t * Append a rule to the existing rules\n\t *\n\t * @access public\n\t */\n\tappendRule(rule: Rule) {\n\t\tthis.setRules([...this.getRules(), rule]);\n\t}\n\n\t/**\n\t * Parse a rule (for e.g. debugging)\n\t *\n\t * @access public\n\t */\n\tparseRule(rule: Rule): ParsedRule {\n\t\treturn new ParsedRule({\n\t\t\t...rule,\n\t\t\tlogger: this.logger,\n\t\t\tswup: this.swup\n\t\t});\n\t}\n\n\t/**\n\t * Get the fragment visit object for a given route\n\t *\n\t * @access public\n\t */\n\tgetFragmentVisit(route: Route, visit?: Visit): FragmentVisit | undefined {\n\t\tconst rule = getFirstMatchingRule(\n\t\t\troute,\n\t\t\tthis.parsedRules,\n\t\t\t// @ts-expect-error createVisit is protected\n\t\t\tvisit || this.swup.createVisit(route)\n\t\t);\n\n\t\t// Bail early if no rule matched\n\t\tif (!rule) return;\n\n\t\t// Get containers that should be replaced for this visit\n\t\tconst containers = getFragmentVisitContainers(\n\t\t\troute,\n\t\t\trule.containers,\n\t\t\tthis.swup,\n\t\t\tthis.logger\n\t\t);\n\n\t\t/** Bail early if there are no fragment elements found for this visit */\n\t\tif (!containers.length) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Pick properties from the current rule that should be projected into the fragmentVisit object\n\t\tconst { name, scroll, focus } = rule;\n\n\t\tconst fragmentVisit: FragmentVisit = {\n\t\t\tcontainers,\n\t\t\tname,\n\t\t\tscroll,\n\t\t\tfocus\n\t\t};\n\n\t\treturn fragmentVisit;\n\t}\n}\n"],"names":["window","process","env","__TEST__","includes","String","NODE_ENV","__DEV__","wrapInEscapeSequence","s","open","close","prepare","bold","highlight","purple","Logger","log","args","msg","shift","console","warn","error","logIf","condition","this","warnIf","errorIf","handlePageView","fragmentPlugin","parsedRules","swup","logger","currentUrl","getCurrentUrl","filter","rule","matchesFrom","matchesTo","forEach","containers","selector","el","queryFragmentElement","providedFragmentUrl","getAttribute","url","Location","fromUrl","setAttribute","__swupFragment","prepareFragmentElements","targetAttribute","document","querySelectorAll","_fragment$__swupFragm","fragment","fragmentUrl","isEqualUrl","href","handleLinksToFragments","modalShown","removeAttribute","showModal","addEventListener","e","key","preventDefault","showDialogs","elementMatchesFragmentUrl","_el$__swupFragment","url1","url2","normalizeUrl","trim","location","searchParams","sort","pathname","replace","search","getRoute","visit","from","to","toggleFragmentVisitClass","fragmentVisit","toggle","name","_document$querySelect","querySelector","classList","getFirstMatchingRule","route","rules","find","matches","shouldSkipAnimation","every","_document$querySelect2","tagName","toLowerCase","fragmentSelector","containerSelector","options","container","cloneRules","Array","isArray","Error","map","_extends","ParsedRule","constructor","_this$logger","_this$logger2","scroll","focus","if","classify","parseContainers","matchPath","rawContainers","_this$logger3","arr","length","Set","_this$logger4","result","validateSelector","getDebugInfo","startsWith","match","_this$logger5","toUrl","validateFragmentSelectorForMatch","_this$logger6","onLinkToSelf","reset","onVisitStart","async","getFragmentVisit","join","target","adjustVisitScroll","a11y","animation","scope","maybeSkipOutAnimation","_visit$fragmentVisit","toString","skip","maybeSkipInAnimation","_visit$fragmentVisit2","beforeContentReplace","trigger","cache","get","fragmentHtml","DOMParser","parseFromString","html","onContentReplace","cacheForeignFragmentElements","currentCache","currentCachedDocument","updatedFragments","foreignFragmentElements","_el$__swupFragment2","_el$__swupFragment3","fragmentCache","currentFragment","unchangedFragment","replaceWith","push","update","documentElement","outerHTML","_el$__swupFragment4","_el$__swupFragment5","onVisitEnd","SwupFragmentPlugin","PluginBase","_parsedRules","super","requires","_rawRules","defaults","debug","mount","setRules","before","handlers","on","unmount","parseRule","getRules","prependRule","appendRule","createVisit","getFragmentVisitContainers","selectors","fragments","record","isLinkToSelf","linkToSelf"],"mappings":"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"}